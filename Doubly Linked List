#include<stdio.h>
#include<conio.h>
#include<malloc.h>
#include<stdlib.h>
# define NULL 0
void inla();
void inbeg();
void inbet();
void display();
void input();
void dela();
void debeg();
void debet();
void count();
int co=0;
struct node
{
int data;
struct node *pre;
struct node *next;
}*start,*tmp2,*newnode,*tmp,*t;
int main()
{
int n,c;
start=NULL;
while(1)
{
printf("enter you choice\n");
printf("1.Insert Last\n2.Insert Beginning\n3.Insert Between\n4.Delete Last\n5.Delete Beginning\n6.Delete Between\n7.Count Linked list\n13.Display\n14.Exit\n");
scanf("%d",&c);
switch(c)
{
case 1:	inla();
	getch();
	break;
case 2: inbeg();
	getch();
	break;
case 3: inbet();
	getch();
	break;
case 4: dela();
	getch();
	break;
case 5: debeg();
	getch();
	break;
case 6: debet();
	getch();
	break;
case 7: count();
	getch();
	break;
case 13:display();
	getch();
	break;
case 14:exit(0);
}
}
}
void input()
{
co++;
newnode=(struct node*)malloc(sizeof(struct node ));
newnode->pre=NULL;
newnode->next=NULL;
printf("enter newnode:- ");
scanf("%d",&newnode->data);
}
void inla()
{
input();
if(start==NULL)
start=newnode;
else
{
tmp=start;
while(tmp->next!=NULL)
{
tmp=tmp->next;
}
newnode->pre=tmp;
tmp->next=newnode;
}
display();
}
void inbeg()
{
input();
if(start==NULL)
start=newnode;
else
{
tmp=start;
start=newnode;
newnode->next=tmp;
tmp->pre=newnode;
}
display();
}
void inbet()
{
int value;
input();
printf("\nenter the value after which value is to be inserted");
scanf("%d",&value);
tmp=start;
while(tmp->data!=value &&tmp!=NULL)
{
tmp=tmp->next;
}
tmp2=tmp->next;
if(tmp->data==value)
{
newnode->pre=tmp;
newnode->next=tmp->next;
tmp->next=newnode;
tmp2->pre=newnode;
}
display();
}
void dela()
{
co--;
tmp=start;
while(tmp->next!=NULL)
{
tmp=tmp->next;

}
t=tmp->pre;
t->next=NULL;
free(tmp);
display();
}
void debeg()
{
co--;
tmp=start;
tmp2=tmp->next;
start=tmp->next;
tmp2->pre=NULL;
free(tmp);
display();
}
void debet()
{
co--;
int key;
printf("enter the value to be deleted");
scanf("%d",&key);
tmp=start;
while(tmp->data!=key &&tmp!=NULL)
{
tmp=tmp->next;
}
tmp2=tmp->next;
t=tmp->pre;
if(tmp->data==key)
{
t->next=tmp->next;
tmp2->pre=tmp->pre;
free(tmp);
}
else
printf("\nvalue does not exist in the linklist");
display();
}
void count()
{
printf("the total number of link list:-%d",co);
}
void display()
{
printf("\nthelinklist is:");
tmp=start;
while(tmp!=NULL)
{
printf("\ndata=%d",tmp->data);
tmp=tmp->next;
}
}
